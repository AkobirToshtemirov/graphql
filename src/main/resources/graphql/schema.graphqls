type Query {
    getUser(id: ID!): User
    getUsers: [User]
    getTodosByLevel(level: Level!): [Todo]
    getTodosByCategory(category: Category!): [Todo]
    getTodosByDeadline(deadline: String!): [Todo]
    getTodosByUserId(userId: Int): [Todo]
}

type Mutation {
    createUser(user: UserInput!): User
    createTodo(todo: TodoInput!): Todo
    completeTodo(todoId: ID!): Todo
    deleteTodo(todoId: ID!): Todo
    updateTodo(
        todoId: ID!,
        title: String,
        description: String,
        category: Category,
        level: Level,
        deadline: String,
        completed: Boolean
    ): Todo
}

type User {
    id: ID!
    fullName: String!
    email: String!
    todos: [Todo]
}

type Todo {
    id: ID!
    title: String!
    description: String!
    category: Category!
    level: Level!
    deadline: String!
    completed: Boolean!
}

input UserInput {
    fullName: String!
    email: String!
    password: String!
}

input TodoInput {
    userId: ID!
    title: String!
    description: String!
    category: Category!
    level: Level!
    deadline: String!
}

enum Category {
    ENTERTAINMENT
    STUDY
    WORK
}

enum Level {
    LOW
    MEDIUM
    HIGH
}
